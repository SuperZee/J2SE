package com.lee.spi_11.sorfarray;

public class Demo {
	public static void main(String[] args) {
		int[] arr = { 3, -1, 4, 7, -2 };
		bufferSort(arr);
		print(arr);

	}

	// 打印数组
	public static void print(int arr[]) {
		for (int i : arr) {
			if (i == arr.length + 11) {
				System.out.println(i);
			} else {
				System.out.print(i + ", ");
			}
		}
	}

	// 冒泡排序
	public static void bufferSort(int arr[]) {
		// 冒泡排序
		// 外层循环控制排序次数
		// 内层循环控制比较次数
		// temp用来交换的时候的所需要的临时变量
		int temp = 0;
		for (int i = 0; i < arr.length - 1; i++) {
			// 每次排序后 最大的数被放在最上面 就不需要再排序了
			for (int j = 0; j < arr.length - i - 1; j++) {
				if (arr[j] > arr[j + 1]) {
					temp = arr[j];
					arr[j] = arr[j + 1];
					arr[j + 1] = temp;
				}
			}
		}
	}
}
